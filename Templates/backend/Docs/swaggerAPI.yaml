openapi: 3.0.0
info:
    title: Event-DTL
    version: 1.0.0
    description: APIs for Event-dtl
servers:
    - url: 'https://development.eventdtl.in/api/v1'
      description: Test/Development Server
    - url: 'https://https://url.com/api/v1'
      description: Production server
    - url: 'http://localhost:8000/api/v1'
      description: Local server
paths:
    # User APIs

    /user/register:
        post:
            summary: Register a new user
            tags:
                - Users
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                fullName:
                                    type: string
                                    example: John Doe
                                email:
                                    type: string
                                    format: email
                                    example: johndoe@example.com
                                phone:
                                    type: string
                                    example: '+91 1234567890'
                                gender:
                                    type: string
                                    example: 'male'
                                password:
                                    type: string
                                    example: password123
                                avatar:
                                    type: string
                                    format: binary
            responses:
                '201':
                    description: User registered successfully, Please verify your email
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 201
                                    data:
                                        type: object
                                        properties:
                                            email:
                                                type: string
                                                format: email
                                                example: 'user@example.com'
                                    message:
                                        type: string
                                        example: User registered successfully
                                    success:
                                        type: boolean
                                        example: true
                '400':
                    description: 'User already exists with the email, User already exists with this phone'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 400
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'User already exists with the email, User already exists with this phone'
                                    success:
                                        type: boolean
                                        example: false
                '406':
                    description: 'All fields are required'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'All fields are required'
                                    success:
                                        type: boolean
                                        example: false
                '408':
                    description: 'Unable to upload avatar. Please try again'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 408
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Unable to upload avatar. Please try again'
                                    success:
                                        type: boolean
                                        example: false
                '500':
                    description: 'Something went wrong while creating user, err.message'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 500
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Something went wrong while creating user, err.message'
                                    success:
                                        type: boolean
                                        example: false
    /user/verifyotp:
        post:
            summary: Verify the otp for registered users
            tags:
                - Users
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    format: email
                                    example: johndoe@example.com
                                otp:
                                    type: string
                                    example: '123456'
            responses:
                '200':
                    description: User verified successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 200
                                    data:
                                        type: object
                                        properties:
                                            user:
                                                type: object
                                                properties:
                                                    _id:
                                                        type: string
                                                        example: 66d46810da1fab58b8633ba8
                                                    fullName:
                                                        type: string
                                                        example: John Doe
                                                    email:
                                                        type: string
                                                        format: email
                                                        example: johndoe@example.com
                                                    phone:
                                                        type: string
                                                        example: '1234567890'
                                                    gender:
                                                        type: string
                                                        example: 'male'
                                                    avatar:
                                                        type: string
                                                        format: uri
                                                        example: 'http://res.cloudinary.com/djjinjn9m/image/upload/v1725196303/tampg81nsuwpoul7rcyo.png'
                                                    userType:
                                                        type: string
                                                        example: 'normal, orgInreview, orgRejected, organiser'
                                                    isVerified:
                                                        type: boolean
                                                        example: true
                                                    likedEvent:
                                                        type: array
                                                        items:
                                                            type: string
                                                            format: uuid
                                                            example: []
                                                    bookings_id:
                                                        type: array
                                                        items:
                                                            type: string
                                                            format: uuid
                                                            example: []
                                                    createdAt:
                                                        type: string
                                                        format: date-time
                                                        example: '2024-09-01T13:11:44.052Z'
                                                    updatedAt:
                                                        type: string
                                                        format: date-time
                                                        example: '2024-09-01T13:12:02.793Z'
                                                    __v:
                                                        type: integer
                                                        example: 0
                                    message:
                                        type: string
                                        example: User verified successfully
                                    success:
                                        type: boolean
                                        example: true
                '400':
                    description: 'Invalid OTP'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 400
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Invalid OTP'
                                    success:
                                        type: boolean
                                        example: false
                '404':
                    description: 'User not found, Please sign up'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 404
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'User not found, Please sign up'
                                    success:
                                        type: boolean
                                        example: false
                '406':
                    description: 'Email and Otp are required'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Email and Otp are required'
                                    success:
                                        type: boolean
                                        example: false
    /user/getotp:
        post:
            summary: Get the otp for registered users
            tags:
                - Users
            security:
                - AccessTokenAuth: []
                - RefreshTokenAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    format: email
                                    example: johndoe@example.com
            responses:
                '202':
                    description: Otp sent successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 200
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: User verified successfully
                                    success:
                                        type: boolean
                                        example: true
                '404':
                    description: 'User not found, Please sign up'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 404
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'User not found, Please sign up'
                                    success:
                                        type: boolean
                                        example: false
                '406':
                    description: 'Email is required'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Email is required'
                                    success:
                                        type: boolean
                                        example: false
    /user/login:
        post:
            summary: Log in an existing user
            tags:
                - Users
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    format: email
                                    example: johndoe@example.com
                                password:
                                    type: string
                                    example: password123
            responses:
                '200':
                    description: User logged-in successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 200
                                    data:
                                        type: object
                                        properties:
                                            user:
                                                type: object
                                                properties:
                                                    _id:
                                                        type: string
                                                        example: 66d46810da1fab58b8633ba8
                                                    fullName:
                                                        type: string
                                                        example: John Doe
                                                    email:
                                                        type: string
                                                        format: email
                                                        example: johndoe@example.com
                                                    phone:
                                                        type: string
                                                        example: '1234567890'
                                                    gender:
                                                        type: string
                                                        example: 'male'
                                                    avatar:
                                                        type: string
                                                        format: uri
                                                        example: 'http://res.cloudinary.com/djjinjn9m/image/upload/v1725196303/tampg81nsuwpoul7rcyo.png'
                                                    userType:
                                                        type: string
                                                        example: 'normal, orgInreview, orgRejected, organiser'
                                                    isVerified:
                                                        type: boolean
                                                        example: true
                                                    likedEvent:
                                                        type: array
                                                        items:
                                                            type: string
                                                            format: uuid
                                                            example: []
                                                    bookings_id:
                                                        type: array
                                                        items:
                                                            type: string
                                                            format: uuid
                                                            example: []
                                                    createdAt:
                                                        type: string
                                                        format: date-time
                                                        example: '2024-09-01T13:11:44.052Z'
                                                    updatedAt:
                                                        type: string
                                                        format: date-time
                                                        example: '2024-09-01T13:12:02.793Z'
                                                    __v:
                                                        type: integer
                                                        example: 0
                                    message:
                                        type: string
                                        example: User logged in successfully
                                    success:
                                        type: boolean
                                        example: true
                '203':
                    description: 'User is not verified, Please verify'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 203
                                    data:
                                        properties:
                                            userEmail:
                                                type: string
                                                example: johndoe@example.com
                                    message:
                                        type: string
                                        example: 'User is not verified, Please verify'
                                    success:
                                        type: boolean
                                        example: false
                '404':
                    description: 'User not found, Please sign up'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 404
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'User not found, Please sign up'
                                    success:
                                        type: boolean
                                        example: false
                '406':
                    description: 'Email and Password are required'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Email and Password are required'
                                    success:
                                        type: boolean
                                        example: false
                '400':
                    description: 'Incorrect password, Please enter correct password'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 400
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Incorrect password, Please enter correct password'
                                    success:
                                        type: boolean
                                        example: false
                '500':
                    description: 'An unexpected error occurred. Please try again later.'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 500
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'An unexpected error occurred. Please try again later.'
                                    success:
                                        type: boolean
                                        example: false
    /user/logout:
        post:
            summary: Log out the current user
            tags:
                - Users
            security:
                - AccessTokenAuth: []
                - RefreshTokenAuth: []
            responses:
                '202':
                    description: User logged out successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 202
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: User logged out successfully
                                    success:
                                        type: boolean
                                        example: true
                '401':
                    description: Invalid auth identity
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 401
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Invalid auth identity
                                    success:
                                        type: boolean
                                        example: false
                '406':
                    description: Auth Identity is required
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Auth Identity is required
                                    success:
                                        type: boolean
                                        example: false
    /user/refreshtoken:
        post:
            summary: Refresh the access token
            tags:
                - Users
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                refreshToken:
                                    type: string
                                    example: SAMPLE_REFRESH_TOKEN
            responses:
                '201':
                    description: Access token refreshed successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 201
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Access token refreshed successfully
                                    success:
                                        type: boolean
                                        example: true
                '401':
                    description: Refresh token is expired or used
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 401
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Refresh token is expired or used
                                    success:
                                        type: boolean
                                        example: false
                '403':
                    description: Invalid authentication, Please login again
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Invalid authentication, Please login again
                                    success:
                                        type: boolean
                                        example: false
                '406':
                    description: Refresh token is required
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Refresh token is required
                                    success:
                                        type: boolean
                                        example: false
                '500':
                    description: 'An unexpected error occurred. Please try again later.'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 500
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'An unexpected error occurred. Please try again later.'
                                    success:
                                        type: boolean
                                        example: false
    /user/userdata:
        get:
            summary: To get user data
            tags:
                - Users
            security:
                - AccessTokenAuth: []
                - RefreshTokenAuth: []
            responses:
                '200':
                    description: User is fetched successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 200
                                    data:
                                        type: object
                                        properties:
                                            user:
                                                type: object
                                                properties:
                                                    _id:
                                                        type: string
                                                        example: 66d46810da1fab58b8633ba8
                                                    fullName:
                                                        type: string
                                                        example: John Doe
                                                    email:
                                                        type: string
                                                        format: email
                                                        example: johndoe@example.com
                                                    phone:
                                                        type: string
                                                        example: '1234567890'
                                                    gender:
                                                        type: string
                                                        example: 'male'
                                                    avatar:
                                                        type: string
                                                        format: uri
                                                        example: 'http://res.cloudinary.com/djjinjn9m/image/upload/v1725196303/tampg81nsuwpoul7rcyo.png'
                                                    organizerStatus:
                                                        type: string
                                                        example: 'false'
                                                    isVerified:
                                                        type: boolean
                                                        example: false
                                                    likedEvent:
                                                        type: array
                                                        items:
                                                            type: string
                                                            format: uuid
                                                            example: []
                                                    createdAt:
                                                        type: string
                                                        format: date-time
                                                        example: '2024-09-01T13:11:44.052Z'
                                                    updatedAt:
                                                        type: string
                                                        format: date-time
                                                        example: '2024-09-01T13:12:02.793Z'
                                                    __v:
                                                        type: integer
                                                        example: 0
                                    message:
                                        type: string
                                        example: User is fetched successfully
                                    success:
                                        type: boolean
                                        example: true
                '401':
                    description: Invalid auth identity
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 401
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Invalid auth identity
                                    success:
                                        type: boolean
                                        example: false
                '406':
                    description: Auth Identity is required
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Auth Identity is required
                                    success:
                                        type: boolean
                                        example: false
    /user/changepassword:
        put:
            summary: To change password of logged in user
            tags:
                - Users
            security:
                - AccessTokenAuth: []
                - RefreshTokenAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                oldPassword:
                                    type: string
                                    example: 'password123'
                                newPassword:
                                    type: string
                                    example: 'password123434'
            responses:
                '202':
                    description: Password updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 202
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Password updated successfully
                                    success:
                                        type: boolean
                                        example: true
                '400':
                    description: Old password did not match, please try again
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 400
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Old password did not match, please try again
                                    success:
                                        type: boolean
                                        example: false
                '401':
                    description: Invalid Auth identity, User not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 401
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Invalid Auth identity, User not found
                                    success:
                                        type: boolean
                                        example: false
                '406':
                    description: Auth Identity is required
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Auth Identity is required
                                    success:
                                        type: boolean
                                        example: false
    /user/resetpassword:
        put:
            summary: To change password of logged in user
            tags:
                - Users
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    format: email
                                    example: johndoe@example.com
                                otp:
                                    type: string
                                    example: '123456'
                                newPassword:
                                    type: string
                                    example: 'password123434'
            responses:
                '202':
                    description: Password reset successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 202
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Password reset successfully
                                    success:
                                        type: boolean
                                        example: true
                '400':
                    description: Invalid or expired OTP
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 400
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Invalid or expired OTP
                                    success:
                                        type: boolean
                                        example: false
                '406':
                    description: Email, Otp and Password are required
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Email, Otp and Password are required
                                    success:
                                        type: boolean
                                        example: false
    /user/changevavtar:
        put:
            summary: To change avatar of logged in user
            tags:
                - Users
            security:
                - AccessTokenAuth: []
                - RefreshTokenAuth: []
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                avatar:
                                    type: string
                                    format: binary
            responses:
                '202':
                    description: Avatar Updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 202
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Avatar Updated successfully
                                    success:
                                        type: boolean
                                        example: true
                '401':
                    description: Invalid Auth identity, User not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 401
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Invalid Auth identity, User not found
                                    success:
                                        type: boolean
                                        example: false
                '406':
                    description: Avatar is required, Auth Identity is required
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Avatar is required, Auth Identity is required
                                    success:
                                        type: boolean
                                        example: false
                '408':
                    description: Unable to upload avatar. Please try again
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 400
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Unable to upload avatar. Please try again
                                    success:
                                        type: boolean
                                        example: false
    /liked-events/{userId}:
        get:
            summary: Get liked events of a user
            tags:
                - Users
            description: Fetches the list of events liked by a specific user, with pagination support.
            parameters:
                - name: userId
                  in: path
                  required: true
                  description: The unique ID of the user whose liked events are to be fetched.
                  schema:
                      type: string
                      format: objectId
                - name: page
                  in: query
                  required: false
                  description: The page number to fetch, defaults to 1.
                  schema:
                      type: integer
                      default: 1
                - name: limit
                  in: query
                  required: false
                  description: The number of liked events per page, defaults to 10.
                  schema:
                      type: integer
                      default: 10
            responses:
                '200':
                    description: Successfully fetched liked events
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        description: Response status code
                                        example: 200
                                    data:
                                        type: object
                                        properties:
                                            total:
                                                type: integer
                                                description: Total number of liked events
                                                example: 25
                                            page:
                                                type: integer
                                                description: Current page number
                                                example: 1
                                            limit:
                                                type: integer
                                                description: Number of events per page
                                                example: 10
                                            events:
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        _id:
                                                            type: string
                                                            description: The unique event ID
                                                            example: '60c72b2f9b1d8c001f8e4e5f'
                                                        name:
                                                            type: string
                                                            description: Name of the event
                                                            example: 'Tech Conference 2025'
                                                        description:
                                                            type: string
                                                            description: A short description of the event
                                                            example: 'An annual tech conference for developers.'
                                                        date:
                                                            type: string
                                                            description: Event date in ISO 8601 format
                                                            example: '2025-05-15T00:00:00.000Z'
                '400':
                    description: Invalid user ID format or invalid pagination parameters
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        description: Response status code
                                        example: 400
                                    message:
                                        type: string
                                        description: Error message
                                        example: 'Invalid userId'
                '404':
                    description: User not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        description: Response status code
                                        example: 404
                                    message:
                                        type: string
                                        description: Error message
                                        example: 'User not found'
                '406':
                    description: Invalid event ID or other data issues
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        description: Response status code
                                        example: 406
                                    message:
                                        type: string
                                        description: Error message
                                        example: 'Invalid eventId'

    /user/bookings/{userId}:
        get:
            summary: Get all booked events for the authenticated user
            tags:
                - Users
            security:
                - BearerAuth: []
            description: Fetches the list of all events booked by the authenticated user.
            parameters:
                - name: userId
                  in: path
                  required: true
                  description: The unique ID of the user whose liked events are to be fetched.
                  schema:
                      type: string
                      format: objectId
            responses:
                '200':
                    description: Successfully retrieved user's booked events
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        description: Response status code
                                        example: 200
                                    data:
                                        type: array
                                        description: List of booked events
                                        items:
                                            type: object
                                            properties:
                                                _id:
                                                    type: string
                                                    description: Unique booking ID
                                                    example: '60c72b2f9b1d8c001f8e4e5f'
                                                event:
                                                    type: object
                                                    description: Details of the booked event
                                                    properties:
                                                        _id:
                                                            type: string
                                                            description: Event ID
                                                            example: '60c72b2f9b1d8c001f8e4e5e'
                                                        title:
                                                            type: string
                                                            description: Title of the event
                                                            example: 'Tech Conference 2025'
                                                        date:
                                                            type: string
                                                            description: Event date in ISO 8601 format
                                                            example: '2025-05-15T00:00:00.000Z'
                                                        location:
                                                            type: string
                                                            description: Event location
                                                            example: 'New York City'
                                                createdAt:
                                                    type: string
                                                    format: date-time
                                                    description: Timestamp when the booking was created
                                                    example: '2025-01-08T10:15:30.000Z'
                                    message:
                                        type: string
                                        description: Response message
                                        example: "User's booked events"
                '401':
                    description: Unauthorized - JWT token missing or invalid
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        description: Response status code
                                        example: 401
                                    message:
                                        type: string
                                        description: Error message
                                        example: 'Unauthorized: Invalid or missing token'
                '404':
                    description: User not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        description: Response status code
                                        example: 404
                                    message:
                                        type: string
                                        description: Error message
                                        example: 'User not found'
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        description: Response status code
                                        example: 500
                                    message:
                                        type: string
                                        description: Error message
                                        example: 'Internal server error'

    # Admin APIs

    /admin/register:
        post:
            summary: Register a new admin
            tags:
                - Admin
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                fullName:
                                    type: string
                                    example: John Doe
                                email:
                                    type: string
                                    format: email
                                    example: johndoe@example.com
                                phone:
                                    type: string
                                    example: '+91 1234567890'
                                gender:
                                    type: string
                                    example: 'male'
                                password:
                                    type: string
                                    example: password123
                                avatar:
                                    type: string
                                    format: binary
            responses:
                '201':
                    description: Admin registered successfully, Please verify your email
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 201
                                    data:
                                        type: object
                                        properties:
                                            adminEmail:
                                                type: string
                                                format: email
                                                example: 'admin@example.com'
                                    message:
                                        type: string
                                        example: Admin registered successfully
                                    success:
                                        type: boolean
                                        example: true
                '400':
                    description: 'Admin already exists with the email, Admin already exists with this phone'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 400
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Admin already exists with the email, Admin already exists with this phone'
                                    success:
                                        type: boolean
                                        example: false
                '406':
                    description: 'All fields are required'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'All fields are required'
                                    success:
                                        type: boolean
                                        example: false
                '408':
                    description: 'Unable to upload avatar. Please try again'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 408
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Unable to upload avatar. Please try again'
                                    success:
                                        type: boolean
                                        example: false
                '500':
                    description: 'Something went wrong while creating admin, err.message'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 500
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Something went wrong while creating admin, err.message'
                                    success:
                                        type: boolean
                                        example: false
    /admin/verifyotp:
        post:
            summary: Verify the otp for registered admins
            tags:
                - Admin
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    format: email
                                    example: johndoe@example.com
                                otp:
                                    type: string
                                    example: '123456'
            responses:
                '200':
                    description: Admin verified successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 200
                                    data:
                                        type: object
                                        properties:
                                            admin:
                                                type: object
                                                properties:
                                                    _id:
                                                        type: string
                                                        example: 66d46810da1fab58b8633ba8
                                                    fullName:
                                                        type: string
                                                        example: John Doe
                                                    email:
                                                        type: string
                                                        format: email
                                                        example: johndoe@example.com
                                                    phone:
                                                        type: string
                                                        example: '1234567890'
                                                    gender:
                                                        type: string
                                                        example: 'male'
                                                    avatar:
                                                        type: string
                                                        format: uri
                                                        example: 'http://res.cloudinary.com/djjinjn9m/image/upload/v1725196303/tampg81nsuwpoul7rcyo.png'
                                                    userType:
                                                        type: string
                                                        example: 'admin'
                                                    isVerified:
                                                        type: boolean
                                                        example: true
                                                    likedEvent:
                                                        type: array
                                                        items:
                                                            type: string
                                                            format: uuid
                                                            example: []
                                                    bookings_id:
                                                        type: array
                                                        items:
                                                            type: string
                                                            format: uuid
                                                            example: []
                                                    createdAt:
                                                        type: string
                                                        format: date-time
                                                        example: '2024-09-01T13:11:44.052Z'
                                                    updatedAt:
                                                        type: string
                                                        format: date-time
                                                        example: '2024-09-01T13:12:02.793Z'
                                                    __v:
                                                        type: integer
                                                        example: 0
                                    message:
                                        type: string
                                        example: Admin verified successfully
                                    success:
                                        type: boolean
                                        example: true
                '400':
                    description: 'Invalid OTP'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 400
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Invalid OTP'
                                    success:
                                        type: boolean
                                        example: false
                '404':
                    description: 'Admin not found, Please sign up'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 404
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Admin not found, Please sign up'
                                    success:
                                        type: boolean
                                        example: false
                '406':
                    description: 'Email and Otp are required'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Email and Otp are required'
                                    success:
                                        type: boolean
                                        example: false
    /admin/getotp:
        post:
            summary: Get the otp for registered admins
            tags:
                - Admin
            security:
                - AccessTokenAuth: []
                - RefreshTokenAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    format: email
                                    example: johndoe@example.com
            responses:
                '202':
                    description: Otp sent successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 200
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Admin verified successfully
                                    success:
                                        type: boolean
                                        example: true
                '404':
                    description: 'Admin not found, Please sign up'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 404
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Admin not found, Please sign up'
                                    success:
                                        type: boolean
                                        example: false
                '406':
                    description: 'Email is required'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Email is required'
                                    success:
                                        type: boolean
                                        example: false
    /admin/login:
        post:
            summary: Log in an existing admin
            tags:
                - Admin
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    format: email
                                    example: johndoe@example.com
                                password:
                                    type: string
                                    example: password123
            responses:
                '200':
                    description: Admin logged-in successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 200
                                    data:
                                        type: object
                                        properties:
                                            admin:
                                                type: object
                                                properties:
                                                    _id:
                                                        type: string
                                                        example: 66d46810da1fab58b8633ba8
                                                    fullName:
                                                        type: string
                                                        example: John Doe
                                                    email:
                                                        type: string
                                                        format: email
                                                        example: johndoe@example.com
                                                    phone:
                                                        type: string
                                                        example: '1234567890'
                                                    gender:
                                                        type: string
                                                        example: 'male'
                                                    avatar:
                                                        type: string
                                                        format: uri
                                                        example: 'http://res.cloudinary.com/djjinjn9m/image/upload/v1725196303/tampg81nsuwpoul7rcyo.png'
                                                    userType:
                                                        type: string
                                                        example: 'admin'
                                                    isVerified:
                                                        type: boolean
                                                        example: true
                                                    likedEvent:
                                                        type: array
                                                        items:
                                                            type: string
                                                            format: uuid
                                                            example: []
                                                    bookings_id:
                                                        type: array
                                                        items:
                                                            type: string
                                                            format: uuid
                                                            example: []
                                                    createdAt:
                                                        type: string
                                                        format: date-time
                                                        example: '2024-09-01T13:11:44.052Z'
                                                    updatedAt:
                                                        type: string
                                                        format: date-time
                                                        example: '2024-09-01T13:12:02.793Z'
                                                    __v:
                                                        type: integer
                                                        example: 0
                                    message:
                                        type: string
                                        example: Admin logged in successfully
                                    success:
                                        type: boolean
                                        example: true
                '203':
                    description: 'Admin is not verified, Please verify'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 203
                                    data:
                                        properties:
                                            userEmail:
                                                type: string
                                                example: johndoe@example.com
                                    message:
                                        type: string
                                        example: 'Admin is not verified, Please verify'
                                    success:
                                        type: boolean
                                        example: false
                '404':
                    description: 'Admin not found, Please sign up'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 404
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Admin not found, Please sign up'
                                    success:
                                        type: boolean
                                        example: false
                '406':
                    description: 'Email and Password are required'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Email and Password are required'
                                    success:
                                        type: boolean
                                        example: false
                '400':
                    description: 'Incorrect password, Please enter correct password'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 400
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Incorrect password, Please enter correct password'
                                    success:
                                        type: boolean
                                        example: false
                '500':
                    description: 'An unexpected error occurred. Please try again later.'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 500
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'An unexpected error occurred. Please try again later.'
                                    success:
                                        type: boolean
                                        example: false
    /admin/logout:
        post:
            summary: Log out the current admin
            tags:
                - Admin
            security:
                - AccessTokenAuth: []
                - RefreshTokenAuth: []
            responses:
                '202':
                    description: Admin logged out successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 202
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Admin logged out successfully
                                    success:
                                        type: boolean
                                        example: true
                '401':
                    description: Invalid auth identity
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 401
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Invalid auth identity
                                    success:
                                        type: boolean
                                        example: false
                '406':
                    description: Auth Identity is required
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Auth Identity is required
                                    success:
                                        type: boolean
                                        example: false
    /admin/refreshtoken:
        post:
            summary: Refresh the access token
            tags:
                - Admin
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                refreshToken:
                                    type: string
                                    example: SAMPLE_REFRESH_TOKEN
            responses:
                '201':
                    description: Access token refreshed successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 201
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Access token refreshed successfully
                                    success:
                                        type: boolean
                                        example: true
                '401':
                    description: Refresh token is expired or used
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 401
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Refresh token is expired or used
                                    success:
                                        type: boolean
                                        example: false
                '403':
                    description: Invalid authentication, Please login again
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Invalid authentication, Please login again
                                    success:
                                        type: boolean
                                        example: false
                '406':
                    description: Refresh token is required
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Refresh token is required
                                    success:
                                        type: boolean
                                        example: false
                '500':
                    description: 'An unexpected error occurred. Please try again later.'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 500
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'An unexpected error occurred. Please try again later.'
                                    success:
                                        type: boolean
                                        example: false
    /admin/admindata:
        get:
            summary: To get admin data
            tags:
                - Admin
            security:
                - AccessTokenAuth: []
                - RefreshTokenAuth: []
            responses:
                '200':
                    description: Admin is fetched successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 200
                                    data:
                                        type: object
                                        properties:
                                            admin:
                                                type: object
                                                properties:
                                                    _id:
                                                        type: string
                                                        example: 66d46810da1fab58b8633ba8
                                                    fullName:
                                                        type: string
                                                        example: John Doe
                                                    email:
                                                        type: string
                                                        format: email
                                                        example: johndoe@example.com
                                                    phone:
                                                        type: string
                                                        example: '1234567890'
                                                    gender:
                                                        type: string
                                                        example: 'male'
                                                    avatar:
                                                        type: string
                                                        format: uri
                                                        example: 'http://res.cloudinary.com/djjinjn9m/image/upload/v1725196303/tampg81nsuwpoul7rcyo.png'
                                                    organizerStatus:
                                                        type: string
                                                        example: 'false'
                                                    isVerified:
                                                        type: boolean
                                                        example: false
                                                    likedEvent:
                                                        type: array
                                                        items:
                                                            type: string
                                                            format: uuid
                                                            example: []
                                                    createdAt:
                                                        type: string
                                                        format: date-time
                                                        example: '2024-09-01T13:11:44.052Z'
                                                    updatedAt:
                                                        type: string
                                                        format: date-time
                                                        example: '2024-09-01T13:12:02.793Z'
                                                    __v:
                                                        type: integer
                                                        example: 0
                                    message:
                                        type: string
                                        example: Admin is fetched successfully
                                    success:
                                        type: boolean
                                        example: true
                '401':
                    description: Invalid auth identity
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 401
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Invalid auth identity
                                    success:
                                        type: boolean
                                        example: false
                '406':
                    description: Auth Identity is required
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Auth Identity is required
                                    success:
                                        type: boolean
                                        example: false
    /admin/changepassword:
        put:
            summary: To change password of logged in admin
            tags:
                - Admin
            security:
                - AccessTokenAuth: []
                - RefreshTokenAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                oldPassword:
                                    type: string
                                    example: 'password123'
                                newPassword:
                                    type: string
                                    example: 'password123434'
            responses:
                '202':
                    description: Password updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 202
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Password updated successfully
                                    success:
                                        type: boolean
                                        example: true
                '400':
                    description: Old password did not match, please try again
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 400
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Old password did not match, please try again
                                    success:
                                        type: boolean
                                        example: false
                '401':
                    description: Invalid Auth identity, Admin not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 401
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Invalid Auth identity, Admin not found
                                    success:
                                        type: boolean
                                        example: false
                '406':
                    description: Auth Identity is required
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Auth Identity is required
                                    success:
                                        type: boolean
                                        example: false
    /admin/resetpassword:
        put:
            summary: To change password of logged in admin
            tags:
                - Admin
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    format: email
                                    example: johndoe@example.com
                                otp:
                                    type: string
                                    example: '123456'
                                newPassword:
                                    type: string
                                    example: 'password123434'
            responses:
                '202':
                    description: Password reset successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 202
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Password reset successfully
                                    success:
                                        type: boolean
                                        example: true
                '400':
                    description: Invalid or expired OTP
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 400
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Invalid or expired OTP
                                    success:
                                        type: boolean
                                        example: false
                '406':
                    description: Email, Otp and Password are required
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Email, Otp and Password are required
                                    success:
                                        type: boolean
                                        example: false
    /admin/changevavtar:
        put:
            summary: To change avatar of logged in admin
            tags:
                - Admin
            security:
                - AccessTokenAuth: []
                - RefreshTokenAuth: []
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                avatar:
                                    type: string
                                    format: binary
            responses:
                '202':
                    description: Avatar Updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 202
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Avatar Updated successfully
                                    success:
                                        type: boolean
                                        example: true
                '401':
                    description: Invalid Auth identity, Admin not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 401
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Invalid Auth identity, Admin not found
                                    success:
                                        type: boolean
                                        example: false
                '406':
                    description: Avatar is required, Auth Identity is required
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Avatar is required, Auth Identity is required
                                    success:
                                        type: boolean
                                        example: false
                '408':
                    description: Unable to upload avatar. Please try again
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 400
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Unable to upload avatar. Please try again
                                    success:
                                        type: boolean
                                        example: false
    /admin/deleteuser/{userType}/{id}:
        delete:
            summary: To change avatar of logged in admin
            tags:
                - Admin
            security:
                - AccessTokenAuth: []
                - RefreshTokenAuth: []
            parameters:
                - in: path
                  name: userType
                  required: true
                  schema:
                      type: string
                      enum:
                          -
                          - admin
                  description: "The type of user to delete. Can be either 'user' or 'admin'."
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: 'The ID of the user/admin to be deleted.'
            responses:
                '202':
                    description: Admin/User deleted successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 202
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Admin/User deleted successfully
                                    success:
                                        type: boolean
                                        example: true
                '400':
                    description: Sorry, the action can't be performed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 400
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Sorry, the action can't be performed
                                    success:
                                        type: boolean
                                        example: false
                '401':
                    description: Invalid auth identity
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 401
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Invalid auth identity
                                    success:
                                        type: boolean
                                        example: false
                '404':
                    description: Admin/User not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 404
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Admin/User not found
                                    success:
                                        type: boolean
                                        example: false

                '406':
                    description: Id and User Type are required, Auth Identity is required
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Id and User Type are required, Auth Identity is required
                                    success:
                                        type: boolean
                                        example: false
    /admin/changeusertype/{id}/:
        put:
            summary: To change status of user
            tags:
                - Admin
            security:
                - AccessTokenAuth: []
                - RefreshTokenAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: 'The ID of the user whose status needs to be upgraded'
                - in: query
                  name: status
                  required: false
                  schema:
                      type: string
                      enum:
                          - accepted
                          - rejected
                  description: 'The status of user to be changed'
            responses:
                '201':
                    description: UserName's status updated to status.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 201
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: UserName's status updated to status.
                                    success:
                                        type: boolean
                                        example: true
                '400':
                    description: Sorry, the action can't be performed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 400
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Sorry, the action can't be performed
                                    success:
                                        type: boolean
                                        example: false
                '401':
                    description: Invalid auth identity
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 401
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Invalid auth identity
                                    success:
                                        type: boolean
                                        example: false
                '404':
                    description: No user found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 404
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: No user found
                                    success:
                                        type: boolean
                                        example: false
                '406':
                    description: Invalid ID format, Missing `status` query parameter. Acceptable values are 'accepted' or 'rejected', Invalid status. Acceptable values are 'accepted' or 'rejected'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: Invalid ID format, Missing `status` query parameter. Acceptable values are 'accepted' or 'rejected', Invalid status. Acceptable values are 'accepted' or 'rejected'
                                    success:
                                        type: boolean
                                        example: false
    /admin/getuser/{id}:
        get:
            summary: Get User by ID
            description: Retrieves a user by their unique ID.
            operationId: getUserById
            tags:
                - Admin
            parameters:
                - name: id
                  in: path
                  required: true
                  description: The user ID.
                  schema:
                      type: string
                - name: type
                  in: query
                  required: false
                  description: The type of the user (admin or normal).
                  schema:
                      type: string
                      enum:
                          - admin
                          - normal
            responses:
                '200':
                    description: User data fetched successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    data:
                                        type: object
                                        properties:
                                            user:
                                                type: object
                                                description: User data
                                    message:
                                        type: string
                                        example: User data fetched successfully
                '404':
                    description: User not found
                '406':
                    description: Invalid ID format

    /admin/allusers:
        get:
            summary: Get all users
            description: Retrieves a list of all users with pagination and filtering options.
            operationId: getAllUsers
            tags:
                - Admin
            parameters:
                - name: userType
                  in: query
                  required: false
                  description: Filter users by type (normal, orgInreview, orgRejected, organiser).
                  schema:
                      type: string
                      enum:
                          - normal
                          - orgInreview
                          - orgRejected
                          - organiser
                - name: limit
                  in: query
                  required: false
                  description: Limit the number of results per page.
                  schema:
                      type: integer
                      default: 10
                - name: page
                  in: query
                  required: false
                  description: The page number for pagination.
                  schema:
                      type: integer
                      default: 1
            responses:
                '200':
                    description: Users fetched successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    data:
                                        type: object
                                        properties:
                                            currentLimit:
                                                type: integer
                                                example: 10
                                            currentPage:
                                                type: integer
                                                example: 1
                                            totalPages:
                                                type: integer
                                                example: 10
                                            totalUsers:
                                                type: integer
                                                example: 100
                                            users:
                                                type: array
                                                items:
                                                    type: object
                                                    description: User details
                                    message:
                                        type: string
                                        example: Users fetched successfully
                '400':
                    description: Invalid pagination parameters
                '404':
                    description: No users found

    /admin/alladmins:
        get:
            summary: Get all admins
            description: Retrieves a list of all admins with pagination.
            operationId: getAllAdmins
            tags:
                - Admin
            parameters:
                - name: limit
                  in: query
                  required: false
                  description: Limit the number of results per page.
                  schema:
                      type: integer
                      default: 10
                - name: page
                  in: query
                  required: false
                  description: The page number for pagination.
                  schema:
                      type: integer
                      default: 1
            responses:
                '200':
                    description: Admins fetched successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    data:
                                        type: object
                                        properties:
                                            currentLimit:
                                                type: integer
                                                example: 10
                                            currentPage:
                                                type: integer
                                                example: 1
                                            totalPages:
                                                type: integer
                                                example: 10
                                            totalAdmins:
                                                type: integer
                                                example: 10
                                            admins:
                                                type: array
                                                items:
                                                    type: object
                                                    description: Admin details
                                    message:
                                        type: string
                                        example: Admins fetched successfully
                '400':
                    description: Invalid pagination parameters
                '404':
                    description: No admins found

    /admin/getevents:
        get:
            tags:
                - Admin
            summary: Get all events
            description: This endpoint allows fetching a list of events based on various filters and pagination options.
            operationId: getAllEvents
            parameters:
                - name: title
                  in: query
                  description: Search events by title (optional).
                  schema:
                      type: string
                - name: city
                  in: query
                  description: Filter events by city (optional).
                  schema:
                      type: string
                - name: page
                  in: query
                  description: Page number for pagination (optional, default is 1).
                  schema:
                      type: integer
                      default: 1
                - name: limit
                  in: query
                  description: Limit number of events per page (optional, default is 10).
                  schema:
                      type: integer
                      default: 10
            responses:
                '200':
                    description: List of events successfully fetched.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    currentPage:
                                        type: integer
                                    totalPages:
                                        type: integer
                                    totalEvents:
                                        type: integer
                                    events:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                title:
                                                    type: string
                                                city:
                                                    type: string
                                                isOffline:
                                                    type: boolean
                                                isPaid:
                                                    type: boolean
                '404':
                    description: No events found.
                '500':
                    description: Internal server error.

    /delevent/{id}:
        delete:
            summary: Delete Event by ID
            description: Deletes an event by its unique ID.
            operationId: deleteEvent
            tags:
                - Admin
            parameters:
                - name: id
                  in: path
                  required: true
                  description: The event ID.
                  schema:
                      type: string
            responses:
                '200':
                    description: Event deleted successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    data:
                                        type: object
                                        properties:
                                            message:
                                                type: string
                                                example: Event deleted successfully

    # Organiser APIs

    /organiser/register:
        post:
            summary: Register a new organiser
            tags:
                - Organisers
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                fullName:
                                    type: string
                                    example: 'Organiser Name'
                                bio:
                                    type: string
                                    example: 'An experienced organiser in event management.'
                                email:
                                    type: string
                                    format: email
                                    example: 'organiser@example.com'
                                phone:
                                    type: string
                                    example: '+91 9876543210'
                                address:
                                    type: string
                                    example: '123 Event St, City, Country'
                                socialLinks:
                                    type: array
                                    items:
                                        type: string
                                    example:
                                        [
                                            'https://linkedin.com/in/organiser',
                                            'https://twitter.com/organiser',
                                        ]
                                companyLogo:
                                    type: string
                                    format: binary
            responses:
                '201':
                    description: Organiser registered successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 201
                                    data:
                                        type: object
                                        properties:
                                            userId:
                                                type: string
                                                example: '64b8d25a92f7b4bde8e93c12'
                                            fullName:
                                                type: string
                                                example: 'Organiser Name'
                                            organiserLogo:
                                                type: string
                                                example: 'http://res.cloudinary.com/dphwk3hos/image/upload/v1731669869/j0eqqqltrtsvuywnnc62.jpg'
                                            bio:
                                                type: string
                                                example: 'An experienced organiser in event management.'
                                            email:
                                                type: string
                                                format: email
                                                example: 'organiser@example.com'
                                            phone:
                                                type: string
                                                example: '+91 9876543210'
                                            address:
                                                type: string
                                                example: '123 Event St, City, Country'
                                            socialLinks:
                                                type: array
                                                items:
                                                    type: string
                                                example:
                                                    [
                                                        'https://linkedin.com/in/organiser',
                                                        'https://twitter.com/organiser',
                                                    ]
                                    message:
                                        type: string
                                        example: 'Hey John Doe, Application for Organiser Name has been sent successfully'
                                    success:
                                        type: boolean
                                        example: true
                '400':
                    description: Organiser already exists
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 400
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Organiser already exists'
                                    success:
                                        type: boolean
                                        example: false
                '406':
                    description: Required fields missing or invalid
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Org name, bio, email, and address are required'
                                    success:
                                        type: boolean
                                        example: false
                '408':
                    description: Unable to upload logo
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 408
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Unable to upload logo. Please try again'
                                    success:
                                        type: boolean
                                        example: false
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 500
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Something went wrong while creating the Organiser'
                                    success:
                                        type: boolean
                                        example: false

    /organiser/getevents:
        get:
            tags:
                - Organisers
            summary: Get all events
            description: This endpoint allows fetching a list of events based on various filters and pagination options.
            operationId: getAllEvents
            parameters:
                - name: title
                  in: query
                  description: Search events by title (optional).
                  schema:
                      type: string
                - name: city
                  in: query
                  description: Filter events by city (optional).
                  schema:
                      type: string
                - name: page
                  in: query
                  description: Page number for pagination (optional, default is 1).
                  schema:
                      type: integer
                      default: 1
                - name: limit
                  in: query
                  description: Limit number of events per page (optional, default is 10).
                  schema:
                      type: integer
                      default: 10
            responses:
                '200':
                    description: List of events successfully fetched.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    currentPage:
                                        type: integer
                                    totalPages:
                                        type: integer
                                    totalEvents:
                                        type: integer
                                    events:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                title:
                                                    type: string
                                                city:
                                                    type: string
                                                isOffline:
                                                    type: boolean
                                                isPaid:
                                                    type: boolean
                '404':
                    description: No events found.
                '500':
                    description: Internal server error.

    # Event APIs

    /event/createEvent:
        post:
            tags:
                - Events
            summary: Create a new event
            description: This endpoint allows organizers to create a new event by providing the necessary details.
            operationId: createEvent
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                title:
                                    type: string
                                    description: Title of the event.
                                isOffline:
                                    type: boolean
                                    description: Specifies whether the event is offline (true) or online (false).
                                isPaid:
                                    type: boolean
                                    description: Specifies whether the event is paid (true) or free (false).
                                city:
                                    type: string
                                    description: Name of the city where the event will take place.
                                hashtags:
                                    type: string
                                    description: JSON string representing hashtags associated with the event.
                                bannerImage:
                                    type: string
                                    format: binary
                                    description: Banner image file for the event.
                                description:
                                    type: string
                                    description: Detailed description of the event.
                                eventStartDate:
                                    type: string
                                    format: date-time
                                    description: Start date and time of the event.
                                eventEndDate:
                                    type: string
                                    format: date-time
                                    description: End date and time of the event.
                            required:
                                - title
                                - isOffline
                                - isPaid
                                - city
            responses:
                '200':
                    description: Event successfully created.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    data:
                                        type: object
                                        description: Contains details about the newly created event.
                                    message:
                                        type: string
                                        example: Event created successfully.
                '400':
                    description: Missing or invalid input fields.
                '500':
                    description: Internal server error.

    /event/updateEvent/{id}:
        put:
            tags:
                - Events
            summary: Update an existing event
            description: This endpoint allows updating the details of an existing event by providing event ID and updated data.
            operationId: updateEvent
            parameters:
                - name: id
                  in: path
                  required: true
                  description: ID of the event to update.
                  schema:
                      type: string
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                bannerImage:
                                    type: string
                                    format: binary
                                    description: Banner image file for the event (optional).
                                hashtags:
                                    type: array
                                    items:
                                        type: string
                                    description: List of hashtags to update for the event.
                                description:
                                    type: string
                                    description: Updated description of the event.
                                totalTickets:
                                    type: integer
                                    description: Total number of tickets for the event.
                                saleStartDate:
                                    type: string
                                    format: date-time
                                    description: Updated sale start date and time.
                                saleEndDate:
                                    type: string
                                    format: date-time
                                    description: Updated sale end date and time.
            responses:
                '200':
                    description: Event successfully updated.
                '404':
                    description: Event not found.
                '400':
                    description: Missing or invalid input fields.
                '500':
                    description: Internal server error.

    /event/getevents:
        get:
            tags:
                - Events
            summary: Get all events
            description: This endpoint allows fetching a list of events based on various filters and pagination options.
            operationId: getAllEvents
            parameters:
                - name: title
                  in: query
                  description: Search events by title (optional).
                  schema:
                      type: string
                - name: city
                  in: query
                  description: Filter events by city (optional).
                  schema:
                      type: string
                - name: page
                  in: query
                  description: Page number for pagination (optional, default is 1).
                  schema:
                      type: integer
                      default: 1
                - name: limit
                  in: query
                  description: Limit number of events per page (optional, default is 10).
                  schema:
                      type: integer
                      default: 10
            responses:
                '200':
                    description: List of events successfully fetched.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    currentPage:
                                        type: integer
                                    totalPages:
                                        type: integer
                                    totalEvents:
                                        type: integer
                                    events:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                title:
                                                    type: string
                                                city:
                                                    type: string
                                                isOffline:
                                                    type: boolean
                                                isPaid:
                                                    type: boolean
                '404':
                    description: No events found.
                '500':
                    description: Internal server error.

    /event/like/{eventId}:
        put:
            tags:
                - Events
            summary: Like or dislike an event
            description: This endpoint allows a user to like or dislike an event.
            operationId: likeEvent
            parameters:
                - name: eventId
                  in: path
                  required: true
                  description: ID of the event to like or dislike.
                  schema:
                      type: string
            responses:
                '200':
                    description: Event successfully liked or unliked.
                '404':
                    description: Event not found.
                '400':
                    description: Invalid event ID.

    /event/liked-users/{eventId}:
        get:
            tags:
                - Events
            summary: Get users who liked an event
            description: This endpoint allows fetching users who have liked a specific event.
            operationId: getUsersWhoLikedEvent
            parameters:
                - name: eventId
                  in: path
                  required: true
                  description: ID of the event.
                  schema:
                      type: string
                - name: page
                  in: query
                  description: Page number for pagination (optional, default is 1).
                  schema:
                      type: integer
                      default: 1
                - name: limit
                  in: query
                  description: Limit number of users per page (optional, default is 10).
                  schema:
                      type: integer
                      default: 10
            responses:
                '200':
                    description: List of users who liked the event.
                '404':
                    description: Event not found.
                '406':
                    description: Invalid event ID.
    /event/bookings/{eventId}:
        get:
            summary: Get all users who booked a specific event
            tags:
                - Events
            description: Fetches the list of users who have booked a specific event.
            parameters:
                - name: eventId
                  in: path
                  required: true
                  description: The unique ID of the event for which bookings are to be fetched.
                  schema:
                      type: string
                      format: objectId
            responses:
                '200':
                    description: Successfully retrieved the list of users who booked the event
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        description: Response status code
                                        example: 200
                                    data:
                                        type: array
                                        description: List of users who booked the event
                                        items:
                                            type: object
                                            properties:
                                                _id:
                                                    type: string
                                                    description: Unique booking ID
                                                    example: '60c72b2f9b1d8c001f8e4e5f'
                                                user:
                                                    type: object
                                                    description: Details of the user who booked the event
                                                    properties:
                                                        _id:
                                                            type: string
                                                            description: User ID
                                                            example: '60c72b2f9b1d8c001f8e4e5e'
                                                        fullName:
                                                            type: string
                                                            description: Full name of the user
                                                            example: 'John Doe'
                                                        email:
                                                            type: string
                                                            format: email
                                                            description: Email of the user
                                                            example: 'johndoe@example.com'
                                                        phone:
                                                            type: string
                                                            description: Contact number of the user
                                                            example: '1234567890'
                                                createdAt:
                                                    type: string
                                                    format: date-time
                                                    description: Timestamp when the booking was created
                                                    example: '2025-01-08T10:15:30.000Z'
                                    message:
                                        type: string
                                        description: Response message
                                        example: "Event's booked users"
                '400':
                    description: Invalid event ID format
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        description: Response status code
                                        example: 400
                                    message:
                                        type: string
                                        description: Error message
                                        example: 'Invalid eventId format'
                '404':
                    description: Event not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        description: Response status code
                                        example: 404
                                    message:
                                        type: string
                                        description: Error message
                                        example: 'Event not found'
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        description: Response status code
                                        example: 500
                                    message:
                                        type: string
                                        description: Error message
                                        example: 'Internal server error'

    # Hashtag APIs

    /hashtag/getevents/{hashtagId}:
        get:
            summary: Get events by hashtag
            tags:
                - Hashtag
            parameters:
                - name: hashtagId
                  in: path
                  required: true
                  schema:
                      type: string
                      example: '64b8d25a92f7b4bde8e93c10'
                  description: The ID of the hashtag
                - name: page
                  in: query
                  required: false
                  schema:
                      type: integer
                      default: 1
                      example: 1
                  description: The page number for pagination
                - name: limit
                  in: query
                  required: false
                  schema:
                      type: integer
                      default: 10
                      example: 10
                  description: The number of events per page
            responses:
                '200':
                    description: Events fetched successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 200
                                    data:
                                        type: object
                                        properties:
                                            total:
                                                type: integer
                                                example: 50
                                            page:
                                                type: integer
                                                example: 1
                                            limit:
                                                type: integer
                                                example: 10
                                            events:
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        _id:
                                                            type: string
                                                            example: '64b8d25a92f7b4bde8e93c12'
                                                        name:
                                                            type: string
                                                            example: 'Event Name'
                                                        description:
                                                            type: string
                                                            example: 'Event description'
                                                        date:
                                                            type: string
                                                            format: date-time
                                                            example: '2025-01-08T10:00:00Z'
                                    message:
                                        type: string
                                        example: 'Events fetched successfully.'
                                    success:
                                        type: boolean
                                        example: true
                '406':
                    description: Invalid hashtag ID or hashtag not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 406
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Invalid hashtag Id, Hashtag not found'
                                    success:
                                        type: boolean
                                        example: false
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    statusCode:
                                        type: integer
                                        example: 500
                                    data:
                                        type: object
                                        nullable: true
                                    message:
                                        type: string
                                        example: 'Something went wrong while fetching events'
                                    success:
                                        type: boolean
                                        example: false

    #Biooking APIs
    /create-booking:
        post:
            summary: Create a new booking
            tags:
                - Bookings
            description: Creates a new booking for a specific event.
            security:
                - BearerAuth: [] # JWT authentication required
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                eventId:
                                    type: string
                                    format: objectId
                                    description: The ID of the event being booked.
                                    example: '60c72b2f9b1d8c001f8e4e5f'
                                tickets:
                                    type: integer
                                    description: Number of tickets booked.
                                    example: 2
                                totalAmount:
                                    type: number
                                    format: float
                                    description: Total amount for the booking.
                                    example: 500.00
            responses:
                '201':
                    description: Booking successfully created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        description: Response status code
                                        example: 201
                                    data:
                                        type: object
                                        properties:
                                            bookingId:
                                                type: string
                                                description: The unique ID of the created booking.
                                                example: '60c72b2f9b1d8c001f8e4e60'
                                    message:
                                        type: string
                                        description: Response message
                                        example: 'Booking created successfully'
                '406':
                    description: Missing required fields (eventId, tickets, or totalAmount)
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        description: Response status code
                                        example: 406
                                    message:
                                        type: string
                                        description: Error message
                                        example: 'All fields are required'
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        description: Response status code
                                        example: 500
                                    message:
                                        type: string
                                        description: Error message
                                        example: 'Internal server error'
    /get-bookingdetails/{bookingId}:
        get:
            summary: Get booking details
            tags:
                - Bookings
            description: Fetches details of a specific booking by its ID.
            parameters:
                - name: bookingId
                  in: query
                  required: true
                  description: The unique ID of the booking to fetch details.
                  schema:
                      type: string
                      format: objectId
            responses:
                '200':
                    description: Successfully fetched booking details
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        description: Response status code
                                        example: 200
                                    data:
                                        type: object
                                        properties:
                                            booking:
                                                type: object
                                                properties:
                                                    _id:
                                                        type: string
                                                        description: The unique booking ID.
                                                        example: '60c72b2f9b1d8c001f8e4e60'
                                                    user:
                                                        type: object
                                                        description: Details of the user who booked.
                                                        properties:
                                                            _id:
                                                                type: string
                                                                description: User ID
                                                                example: '60c72b2f9b1d8c001f8e4e5e'
                                                            fullName:
                                                                type: string
                                                                description: Full name of the user
                                                                example: 'John Doe'
                                                            email:
                                                                type: string
                                                                format: email
                                                                description: Email of the user
                                                                example: 'johndoe@example.com'
                                                    event:
                                                        type: object
                                                        description: Event details of the booking.
                                                        properties:
                                                            _id:
                                                                type: string
                                                                description: Event ID
                                                                example: '60c72b2f9b1d8c001f8e4e5f'
                                                            title:
                                                                type: string
                                                                description: Event title
                                                                example: 'Tech Conference 2025'
                                                            date:
                                                                type: string
                                                                format: date-time
                                                                description: Date of the event
                                                                example: '2025-05-15T00:00:00.000Z'
                                                    tickets:
                                                        type: integer
                                                        description: Number of tickets booked.
                                                        example: 2
                                                    totalAmount:
                                                        type: number
                                                        format: float
                                                        description: Total amount paid.
                                                        example: 500.00
                                    message:
                                        type: string
                                        description: Response message
                                        example: 'Booking details fetched successfully'
                '406':
                    description: Missing booking ID
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        description: Response status code
                                        example: 406
                                    message:
                                        type: string
                                        description: Error message
                                        example: 'Booking ID is required'
                '404':
                    description: Booking not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        description: Response status code
                                        example: 404
                                    message:
                                        type: string
                                        description: Error message
                                        example: 'Booking not found'
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        description: Response status code
                                        example: 500
                                    message:
                                        type: string
                                        description: Error message
                                        example: 'Internal server error'

    # Payment APIs
    /create-payment:
        post:
            summary: Create a Razorpay payment order
            tags:
                - Payments
            description: Generates a Razorpay order for booking payment.
            security:
                - BearerAuth: [] # JWT authentication required
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                bookingId:
                                    type: string
                                    format: objectId
                                    description: The ID of the booking for which payment is being made.
                                    example: '60c72b2f9b1d8c001f8e4e5f'
                                amount:
                                    type: number
                                    format: float
                                    description: Total payment amount.
                                    example: 500.00
            responses:
                '201':
                    description: Payment order successfully created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 201
                                    data:
                                        type: object
                                        properties:
                                            orderId:
                                                type: string
                                                description: Razorpay order ID.
                                                example: 'order_9A33XWu170gUtm'
                                    message:
                                        type: string
                                        example: 'Payment order created successfully'
                '406':
                    description: Missing required fields (bookingId or amount)
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 406
                                    message:
                                        type: string
                                        example: 'All fields are required'
                '404':
                    description: Booking not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 404
                                    message:
                                        type: string
                                        example: 'Booking not found'
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: 'Internal server error'
    /verify-payment:
        post:
            summary: Verify Razorpay payment
            tags:
                - Payments
            description: Verifies the payment using Razorpay's signature validation.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                razorpay_order_id:
                                    type: string
                                    description: The order ID generated by Razorpay.
                                    example: 'order_9A33XWu170gUtm'
                                razorpay_payment_id:
                                    type: string
                                    description: The payment ID provided by Razorpay.
                                    example: 'pay_29QQoUBi66xm2f'
                                razorpay_signature:
                                    type: string
                                    description: The signature generated by Razorpay to verify the payment.
                                    example: 'f24264b9211a4b02aab855c6f3b8bcd2921c998e5c5fef3e4c1f09a40c9bb4f7'
            responses:
                '200':
                    description: Payment verified successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: 'Payment verified successfully'
                '406':
                    description: Missing payment details
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 406
                                    message:
                                        type: string
                                        example: 'Invalid payment details'
                '400':
                    description: Payment verification failed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 400
                                    message:
                                        type: string
                                        example: 'Payment verification failed'
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 500
                                    message:
                                        type: string
                                        example: 'Internal server error'

components:
    securitySchemes:
        AccessTokenAuth:
            type: apiKey
            in: cookie
            name: accessToken # Name of the cookie for access token
        RefreshTokenAuth:
            type: apiKey
            in: cookie
            name: refreshToken # Name of the cookie for refresh token

    schemas:
        # User Schema

        User:
            type: object
            required:
                - fullName
                - email
                - password
                - phone
                - gender
            properties:
                fullName:
                    type: string
                    example: John Doe
                email:
                    type: string
                    format: email
                    example: johndoe@example.com
                phone:
                    type: string
                    example: 1234567890
                password:
                    type: string
                    example: password123
                gender:
                    type: string
                    example: 'male'
                avatar:
                    type: string
                    format: uri
                    example: 'https://example.com/avatar.jpg'
                userType:
                    type: string
                    example: normal, orgInreview, orgRejected, organiser
                isVerified:
                    type: boolean
                    example: true
                isBanned:
                    type: boolean
                    example: true
                otp:
                    type: string
                    example: '123456'
                otpExpiresAt:
                    type: string
                    format: date-time
                    example: '2024-09-01T13:11:44.052Z'
                likedEvent:
                    type: string
                    items:
                        type: string
                        format: uuid
                    description: 'List of UUIDs representing liked events.'
                    example:
                        - '123e4567-e89b-12d3-a456-426614174000'
                        - '123e4567-e89b-12d3-a456-426614174001'
                bookings_id:
                    type: UUID
                    items:
                        type: string
                        format: uuid
                    description: 'List of UUIDs representing booking IDs.'
                    example:
                        - '123e4567-e89b-12d3-a456-426614174002'
                        - '123e4567-e89b-12d3-a456-426614174003'
                refreshToken:
                    type: string
                    example: sample_refresh_token
                createdAt:
                    type: string
                    format: date-time
                    example: '2024-09-01T13:11:44.052Z'
                updatedAt:
                    type: string
                    format: date-time
                    example: '2024-09-01T13:12:02.793Z'
                v:
                    type: integer
                    example: 0

        # Admin schema

        Admin:
            type: object
            required:
                - fullName
                - email
                - password
                - phone
                - gender
            properties:
                fullName:
                    type: string
                    example: John Doe
                email:
                    type: string
                    format: email
                    example: johndoe@example.com
                phone:
                    type: string
                    example: 1234567890
                password:
                    type: string
                    example: password123
                gender:
                    type: string
                    example: 'male'
                avatar:
                    type: string
                    format: uri
                    example: 'https://example.com/avatar.jpg'
                userType:
                    type: string
                    example: 'admin'
                isVerified:
                    type: boolean
                    example: true
                otp:
                    type: string
                    example: '123456'
                otpExpiresAt:
                    type: string
                    format: date-time
                    example: '2024-09-01T13:11:44.052Z'
                refreshToken:
                    type: string
                    example: sample_refresh_token
                createdAt:
                    type: string
                    format: date-time
                    example: '2024-09-01T13:11:44.052Z'
                updatedAt:
                    type: string
                    format: date-time
                    example: '2024-09-01T13:12:02.793Z'
                v:
                    type: integer
                    example: 0

        # Organiser schema

        Organiser:
            type: object
            required:
                - userId
                - companyName
                - bio
            properties:
                userId:
                    type: UUIDs
                    example: 66d46810da1fab58b8633ba8
                fullName:
                    type: string
                    example: Velocity
                organiserLogo:
                    type: string
                    format: uri
                    example: 'https://example.com/logo.jpg'
                bio:
                    type: string
                    example: 'admin'
                email:
                    type: string
                    format: email
                phone:
                    type: string
                    example: '+91 1234567890'
                address:
                    type: string
                    example: 23 - local city town state country
                sociallinks:
                    type: array
                    example: The array of platform urls
                createdAt:
                    type: string
                    format: date-time
                    example: '2024-09-01T13:11:44.052Z'
                updatedAt:
                    type: string
                    format: date-time
                    example: '2024-09-01T13:12:02.793Z'
                v:
                    type: integer
                    example: 0

        # Event schema

        Event:
            type: object
            required:
                - organiserId
                - title
                - category
                - description
                - eventStartDate
                - eventEndDate
                - isOffline
                - totalTickets
                - minTicketsPerBooking
                - maxTicketsPerBooking
                - saleStartDatetime
                - saleEndDatetime
            properties:
                organiserId:
                    type: string
                    description: The ID of the organiser (ObjectId referencing the "Organiser" model).
                title:
                    type: string
                    description: The title of the event.
                category:
                    type: string
                    description: The category of the event (e.g., conference, concert, etc.).
                description:
                    type: string
                    description: Detailed description of the event.
                bannerImage:
                    type: string
                    description: URL of the banner image for the event.
                eventStartDate:
                    type: string
                    description: The start date of the event (in string format, e.g., "YYYY-MM-DD").
                eventEndDate:
                    type: string
                    description: The end date of the event (in string format, e.g., "YYYY-MM-DD").
                isOffline:
                    type: boolean
                    description: Indicates whether the event is offline (in-person) or online.
                isDisable:
                    type: boolean
                    description: Indicates whether the event is disabled.
                contactPhone:
                    type: string
                    description: The contact phone number for the event.
                contactEmail:
                    type: string
                    description: The contact email for the event.
                hashtagIds:
                    type: array
                    items:
                        type: string
                    description: List of hashtags related to the event (references to "Hashtag" model).
                isPaid:
                    type: boolean
                    description: Indicates whether the event is a paid event.
                priceRange:
                    type: object
                    properties:
                        min:
                            type: number
                            description: The minimum ticket price for the event.
                        max:
                            type: number
                            description: The maximum ticket price for the event.
                totalTickets:
                    type: number
                    description: The total number of tickets available for the event.
                minTicketsPerBooking:
                    type: number
                    description: The minimum number of tickets that can be booked at a time.
                maxTicketsPerBooking:
                    type: number
                    description: The maximum number of tickets that can be booked at a time.
                saleStartDatetime:
                    type: string
                    description: The datetime when ticket sales start.
                saleEndDatetime:
                    type: string
                    description: The datetime when ticket sales end.
                ticketInfo:
                    type: array
                    items:
                        type: object
                        properties:
                            ticketType:
                                type: string
                                description: The type of ticket (e.g., "Gold", "Silver", "Platinum").
                            totalQuantity:
                                type: number
                                description: The total number of tickets for this type.
                            price:
                                type: number
                                description: The price of the ticket.
                eventVenue:
                    type: object
                    properties:
                        name:
                            type: string
                            description: The name of the event venue.
                        streetLine1:
                            type: string
                            description: The first line of the street address.
                        streetLine2:
                            type: string
                            description: The second line of the street address.
                mapLocation:
                    type: string
                    description: The map location URL or coordinates for the venue.
                city:
                    type: string
                    description: The city where the event is being held.
                itemsToCarry:
                    type: array
                    items:
                        type: string
                    description: A list of items to bring for the event (e.g., ID card, tickets, etc.).
                arrangementDetails:
                    type: array
                    items:
                        type: string
                    description: Additional event arrangement details (e.g., seating plan, food arrangement).
                utilities:
                    type: array
                    items:
                        type: string
                    description: List of utilities provided during the event (e.g., Wi-Fi, restrooms, etc.).
                isPublished:
                    type: boolean
                    description: Indicates whether the event is published or not.
                likedBy:
                    type: array
                    items:
                        type: string
                    description: List of user IDs who liked the event.

        # Hashtag schema

        Hashtag:
            type: object
            required:
                - name
            properties:
                name:
                    type: string
                    description: The name of the hashtag.
                    maxLength: 50
                events:
                    type: array
                    items:
                        type: string
                        description: List of event IDs (references to the "Event" model).
                isDisable:
                    type: boolean
                    description: Indicates whether the hashtag is disabled.
                    default: false
            additionalProperties: false
            timestamps:
                createdAt:
                    type: string
                    format: date-time
                    description: The date and time when the hashtag was created.
                updatedAt:
                    type: string
                    format: date-time
                    description: The date and time when the hashtag was last updated.

                    # Payment Schema

        # Payment schema
        Payment:
            type: object
            required:
                - userId
                - bookingId
                - razorpay_order_id
                - amount
            properties:
                userId:
                    type: string
                    format: uuid
                    description: 'Reference to the User who made the payment.'
                    example: '123e4567-e89b-12d3-a456-426614174000'
                bookingId:
                    type: string
                    format: uuid
                    description: 'Reference to the Booking associated with the payment.'
                    example: '123e4567-e89b-12d3-a456-426614174001'
                razorpay_order_id:
                    type: string
                    description: 'Razorpay order ID for the transaction.'
                    example: 'order_Ilu3T0jK9tT1aX'
                razorpay_payment_id:
                    type: string
                    description: 'Razorpay payment ID (available after successful payment).'
                    example: 'pay_HxLqS8VQcL7aFy'
                razorpay_signature:
                    type: string
                    description: 'Razorpay signature for payment verification.'
                    example: 'abcd1234xyz890'
                amount:
                    type: number
                    format: float
                    description: 'Amount paid for the booking.'
                    example: 1500.00
                currency:
                    type: string
                    description: 'Currency used for the payment.'
                    example: 'INR'
                status:
                    type: string
                    enum: ['pending', 'success', 'failed']
                    description: 'Current payment status.'
                    example: 'success'
                createdAt:
                    type: string
                    format: date-time
                    description: 'Timestamp when the payment was created.'
                    example: '2024-09-01T13:11:44.052Z'
                updatedAt:
                    type: string
                    format: date-time
                    description: 'Timestamp when the payment was last updated.'
                    example: '2024-09-01T13:12:02.793Z'

        #Booking Schema

        Booking:
            type: object
            required:
                - userId
                - eventId
                - tickets
                - totalAmount
            properties:
                userId:
                    type: string
                    format: uuid
                    description: 'Reference to the User who made the booking.'
                    example: '123e4567-e89b-12d3-a456-426614174000'
                eventId:
                    type: string
                    format: uuid
                    description: 'Reference to the Event being booked.'
                    example: '123e4567-e89b-12d3-a456-426614174001'
                tickets:
                    type: integer
                    minimum: 1
                    description: 'Number of tickets booked.'
                    example: 2
                totalAmount:
                    type: number
                    format: float
                    description: 'Total amount paid for the booking.'
                    example: 3000.00
                status:
                    type: string
                    enum: ['pending', 'success', 'failed']
                    description: 'Current booking status.'
                    example: 'success'
                payment:
                    type: string
                    format: uuid
                    description: 'Reference to the associated payment.'
                    example: '123e4567-e89b-12d3-a456-426614174002'
                createdAt:
                    type: string
                    format: date-time
                    description: 'Timestamp when the booking was created.'
                    example: '2024-09-01T13:11:44.052Z'
                updatedAt:
                    type: string
                    format: date-time
                    description: 'Timestamp when the booking was last updated.'
                    example: '2024-09-01T13:12:02.793Z'
